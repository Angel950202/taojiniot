<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd"
	   default-lazy-init="true">

	<context:property-placeholder location="classpath*:/conf/iot-service.properties"
								  ignore-resource-not-found="true" ignore-unresolvable="true" />

	<context:component-scan base-package="com.taojin.iot.*">
		<context:exclude-filter type="annotation"
								expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"> <property name="driverClass" value="${jdbc.driver}"
		/> <property name="jdbcUrl" value="${jdbc.url}" /> <property name="user"
		value="${jdbc.username}" /> <property name="password" value="${jdbc.password}"
		/> <property name="initialPoolSize" value="${connection_pools.initial_pool_size}"
		/> <property name="minPoolSize" value="${connection_pools.min_pool_size}"
		/> <property name="maxPoolSize" value="${connection_pools.max_pool_size}"
		/> <property name="maxIdleTime" value="${connection_pools.max_idle_time}"
		/> <property name="acquireIncrement" value="${connection_pools.acquire_increment}"
		/> <property name="checkoutTimeout" value="${connection_pools.checkout_timeout}"
		/> </bean> -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="filters" value="stat" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="2000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="600000" />
		<property name="maxEvictableIdleTimeMillis" value="900000" />

		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="keepAlive" value="true" />

	</bean>

	<bean id="entityManagerFactory"
		  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 指定persistence.xml配置文件的位置 作用：是JPA的配置文件，用来映射PU(Persist Unit)的 -->
		<property name="persistenceXmlLocation" value="classpath*:/persistence.xml" />
		<property name="persistenceUnitName" value="persistenceUnit" />
		<!-- 持久性配置 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<!-- 自动创建实体类对应的表 -->
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.isolation">2</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/${system.project_name}/index</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
			</props>
		</property>

	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<cache:annotation-driven cache-manager="cacheManager" />

	<bean
			class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="java.lang.System" />
		<property name="targetMethod" value="setProperty" />
		<property name="arguments">
			<list>
				<value>system.project_name</value>
				<value>${system.project_name}</value>
			</list>
		</property>
	</bean>

	<!-- 配置ehcache，指定xml文件） -->
	<bean id="ehCacheManager"
		  class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:/ehcache.xml" />
		<property name="shared" value="true" />
	</bean>

	<!-- 配置ehcache -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>

	<bean id="localeResolver"
		  class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="${locale}" />
	</bean>

	<bean id="taskExecutor"
		  class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${task.core_pool_size}" />
		<property name="maxPoolSize" value="${task.max_pool_size}" />
		<property name="queueCapacity" value="${task.queue_capacity}" />
		<property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>
	<!-- 扫描切面注解 -->
	<!-- <aop:aspectj-autoproxy/> -->
	<!-- redis 配置 -->
	<!-- <import resource="classpath:/applicationContext-redis.xml"/> -->
</beans>